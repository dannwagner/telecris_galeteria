workflows:
  ios-build-workflow:
    name: iOS Build Workflow
    environment:
      flutter: stable
      xcode: latest
      groups:
        # Grupo com as credenciais da App Store Connect API Key
        # e a variável MATCH_SSH_PRIVATE_KEY (com a NOVA chave privada em TEXTO PLANO)
        - appstore_credentials 
      vars:
        # Variáveis necessárias para o Fastlane match
        BUNDLE_ID: "app.telecris"
        APPLE_ID: "sac@telecris.app" # Email da conta Apple Developer
        TEAM_ID: "QRUFZ86NTH" # Seu Team ID da Apple

    scripts:
      # O script "Set up SSH key for Git (using printf)" foi REMOVIDO
      - name: Install Fastlane
        script: |
          gem install fastlane
      
      # --- PASSO DE DIAGNÓSTICO REVISADO --- 
      - name: Test SSH Connection to GitHub (Revised)
        # Adiciona 'set -x' para mostrar cada comando executado
        # Adiciona '|| true' ao comando ssh para que o build não pare imediatamente se ele falhar,
        # permitindo que vejamos os logs completos do SSH.
        script: |
          set -x # Mostra os comandos sendo executados
          echo "--- Starting SSH Connection Test --- "
          echo "Checking environment variable..."
          if [ -z "$MATCH_SSH_PRIVATE_KEY" ]; then
            echo "ERROR: MATCH_SSH_PRIVATE_KEY is not set or empty!"
            exit 1
          fi
          echo "Setting up SSH directory and key file..."
          mkdir -p ~/.ssh
          # Escreve a chave privada da variável de ambiente para um arquivo
          echo "$MATCH_SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519_match_test
          if [ ! -s ~/.ssh/id_ed25519_match_test ]; then
             echo "ERROR: Failed to write private key to file or file is empty!"
             exit 1
          fi
          echo "Setting key file permissions..."
          chmod 600 ~/.ssh/id_ed25519_match_test
          echo "Adding GitHub to known hosts..."
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "Attempting VERBOSE SSH connection test to github.com..."
          # Tenta autenticar no GitHub usando a chave específica com MÁXIMA verbosidade (-vvv).
          # Usamos '|| true' para garantir que o script continue mesmo se o ssh falhar, para vermos os logs.
          ssh -vvv -T -i ~/.ssh/id_ed25519_match_test git@github.com || true 
          echo "--- SSH connection test finished. Check logs above carefully. --- "
      # --- FIM DO PASSO DE DIAGNÓSTICO REVISADO ---

      - name: Set up code signing with Fastlane (using SSH)
        script: |
          echo "Running fastlane match..."
          # Usa SSH para autenticação (Fastlane deve pegar MATCH_SSH_PRIVATE_KEY automaticamente)
          # A flag --readonly foi REMOVIDA anteriormente
          fastlane match appstore \
            --app_identifier "$BUNDLE_ID" \
            --username "$APPLE_ID" \
            --team_id "$TEAM_ID" \
            --git_url "git@github.com:dannwagner/certificates-repo.git" \
            --verbose # Mantém verbose para logs detalhados
      - name: Install Flutter dependencies
        script: flutter pub get
      - name: Build iOS
        script: flutter build ios --release --no-codesign
      - name: Export IPA
        script: |
          # Verifique se ios/exportOptions.plist está correto (nomes de certificado/perfil)
          xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath $CM_BUILD_DIR/Runner.xcarchive
          xcodebuild -exportArchive -archivePath $CM_BUILD_DIR/Runner.xcarchive -exportOptionsPlist ios/exportOptions.plist -exportPath $CM_BUILD_DIR

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_ID
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID

        # --- Configurações Opcionais --- 
        # submit_to_testflight: true
        # beta_groups: 
        #   - NomeDoGrupoBeta
        # submit_to_app_store: false

